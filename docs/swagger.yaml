definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.Action:
    enum:
    - connect
    - deny_connect
    - download
    - deny_download
    - upload
    - deny_upload
    type: string
    x-enum-varnames:
    - Connect
    - DenyConnect
    - Download
    - DenyDownload
    - Upload
    - DenyUpload
  model.AddKeyRequest:
    properties:
      identity_file:
        description: 云上下载下来的名字，比如 jms-key.pem，private key file name
        type: string
      key_id:
        description: 云上的key id，比如 skey-123456
        type: string
      pem_base64:
        description: base64
        type: string
      profile:
        description: 云账号的 profile，比如 aws, aliyun
        type: string
    required:
    - key_id
    - pem_base64
    type: object
  model.ApprovalMut:
    properties:
      actions:
        description: 申请动作，默认只有connect
        items:
          $ref: '#/definitions/model.Action'
        type: array
      applicant:
        description: Groups       ArrayString     `json:"groups"`
        type: string
      name:
        type: string
      period:
        allOf:
        - $ref: '#/definitions/model.Period'
        description: 审批周期，默认一周
      server_filter:
        $ref: '#/definitions/model.ServerFilterV1'
      users:
        items:
          type: string
        type: array
    required:
    - applicant
    - server_filter
    - users
    type: object
  model.ApprovalResult:
    properties:
      applicant:
        type: string
      is_pass:
        type: boolean
    type: object
  model.CreateBroadcastRequest:
    properties:
      keepDays:
        description: 保留天数，0 表示永久
        type: integer
      messages:
        description: 消息内容
        type: string
    required:
    - messages
    type: object
  model.CreateProfileRequest:
    properties:
      ak:
        type: string
      cloud:
        default: tencent
        description: aws, aliyun, tencent
        type: string
      enabled:
        default: true
        description: 是否启用
        type: boolean
      name:
        type: string
      regions:
        items:
          type: string
        type: array
      sk:
        type: string
    type: object
  model.CreateProxyRequest:
    properties:
      host:
        type: string
      identity_file:
        description: KeyID和IdentityFile都是用pem来验证，KeyID是唯一的，IdentityFile在名称命名时候不同账号可能会同名。当出现IdentityFile不唯一的时候可以用
          keyID, 优先使用KeyID
        type: string
      ip_prefix:
        description: 适配哪些机器 IP 前缀使用 Proxy, 例如 192.168.1
        type: string
      key_id:
        description: KeyID和IdentityFile都是用pem来验证，KeyID是唯一的，IdentityFile在名称命名时候不同账号可能会同名。当出现IdentityFile不唯一的时候可以用
          keyID, 优先使用KeyID
        type: string
      login_passwd:
        description: 密码或者key必须有一个, 优先使用密码
        type: string
      login_user:
        description: key超级用户 root ec2-user
        type: string
      name:
        description: 代理名称 唯一
        type: string
      port:
        type: integer
    required:
    - name
    type: object
  model.CreateShellTaskRequest:
    properties:
      corn:
        description: corn表达式，支持定时执行任务，执行一次可以不传
        type: string
      name:
        description: 任务名称，唯一
        type: string
      servers:
        allOf:
        - $ref: '#/definitions/model.ServerFilterV1'
        description: 执行的机器
      shell:
        description: 脚本内容
        type: string
    required:
    - name
    - servers
    - shell
    type: object
  model.KV:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  model.Key:
    properties:
      isDelete:
        type: boolean
      keyID:
        type: string
      keyName:
        type: string
      pemBase64:
        type: string
      profile:
        type: string
      uuid:
        type: string
    type: object
  model.Period:
    enum:
    - 1d
    - 1w
    - 1m
    - 1y
    - ever
    type: string
    x-enum-varnames:
    - OneDay
    - OneWeek
    - OneMonth
    - OneYear
    - Forever
  model.Policy:
    properties:
      actions:
        items:
          type: string
        type: array
      approval_id:
        description: 审批ID
        type: string
      approver:
        description: 审批人
        type: string
      created_at:
        type: string
      expires_at:
        type: string
      id:
        type: string
      is_deleted:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      server_filter:
        $ref: '#/definitions/model.ServerFilter'
      server_filter_v1:
        $ref: '#/definitions/model.ServerFilterV1'
      updated_at:
        type: string
      users:
        items:
          type: string
        type: array
    type: object
  model.PolicyRequest:
    properties:
      actions:
        items:
          type: string
        type: array
      approval_id:
        type: string
      expires_at:
        description: time.Time
        type: string
      is_enabled:
        type: boolean
      name:
        type: string
      server_filter:
        $ref: '#/definitions/model.ServerFilterV1'
      users:
        items:
          type: string
        type: array
    required:
    - name
    - server_filter
    type: object
  model.Profile:
    properties:
      ak:
        type: string
      cloud:
        type: string
      enabled:
        type: boolean
      isDelete:
        type: boolean
      name:
        type: string
      regions:
        items:
          type: string
        type: array
      sk:
        description: 经过加密
        type: string
      uuid:
        type: string
    type: object
  model.Proxy:
    properties:
      host:
        type: string
      identityFile:
        type: string
      ipprefix:
        type: string
      isDelete:
        type: boolean
      keyID:
        type: string
      loginPasswd:
        type: string
      loginUser:
        type: string
      name:
        type: string
      port:
        type: integer
      uuid:
        type: string
    type: object
  model.SSHLoginRecord:
    properties:
      client:
        description: 客户端
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      target:
        description: 目标服务器
        type: string
      target_instance_id:
        type: string
      updatedAt:
        type: string
      user:
        description: 用户
        type: string
    type: object
  model.ScpRecord:
    properties:
      action:
        description: download,upload
        type: string
      client:
        description: 客户端
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      from:
        description: 来源
        type: string
      id:
        type: integer
      to:
        description: 目标
        type: string
      updatedAt:
        type: string
      user:
        description: 用户
        type: string
    type: object
  model.ServerFilter:
    properties:
      env_type:
        description: 机器 Tags 中的 EnvType，支持* 匹配所有
        type: string
      ip_addr:
        description: IP 地址完全匹配，支持* 匹配所有
        type: string
      name:
        description: 名字完全匹配，支持*
        type: string
      team:
        description: 机器 Tags 中的 Team，支持* 匹配所有
        type: string
    type: object
  model.ServerFilterV1:
    properties:
      env_type:
        description: 机器 Tags 中的 EnvType，支持* 匹配所有
        items:
          type: string
        type: array
      ip_addr:
        description: IP 地址完全匹配，支持* 匹配所有
        items:
          type: string
        type: array
      kv:
        allOf:
        - $ref: '#/definitions/model.KV'
        description: 支持自己指定特定的 KV 来过滤
      name:
        description: 名字完全匹配，支持*
        items:
          type: string
        type: array
      team:
        description: 机器 Tags 中的 Team，支持* 匹配所有
        items:
          type: string
        type: array
    type: object
  model.ShellTask:
    properties:
      corn:
        type: string
      exec_result:
        description: 任务执行结果信息
        type: string
      exec_times:
        description: 任务执行次数
        type: integer
      is_deleted:
        type: boolean
      name:
        type: string
      servers:
        $ref: '#/definitions/model.ServerFilterV1'
      shell:
        type: string
      status:
        $ref: '#/definitions/model.Status'
      submit_user:
        description: 直接在token中获取
        type: string
      uuid:
        type: string
    type: object
  model.ShellTaskRecord:
    properties:
      cost_time:
        type: string
      exec_times:
        type: integer
      is_success:
        type: boolean
      output:
        type: string
      server_ip:
        type: string
      server_name:
        type: string
      shell:
        type: string
      task_id:
        type: string
      task_name:
        type: string
      uuid:
        type: string
    type: object
  model.Status:
    enum:
    - Pending
    - Running
    - Success
    - Failed
    - NotAllSuccess
    - Cancelled
    type: string
    x-enum-varnames:
    - StatusPending
    - StatusRunning
    - StatusSuccess
    - StatusFailed
    - StatusNotAllSuccess
    - StatusCancelled
  model.User:
    properties:
      created_at:
        type: string
      dingtalk_dept_id:
        type: string
      dingtalk_id:
        type: string
      email:
        type: string
      groups:
        description: 组不在 jms维护这里只需要和机器 tag:Team 匹配即可。
        items:
          type: string
        type: array
      id:
        type: string
      is_deleted:
        type: boolean
      is_ldap:
        type: boolean
      passwd:
        description: bas64
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  model.UserPatchMut:
    properties:
      groups:
        items:
          type: string
        type: array
    type: object
  model.UserRequest:
    properties:
      dingtalk_dept_id:
        type: string
      dingtalk_id:
        type: string
      email:
        type: string
      groups:
        items:
          type: string
        type: array
      passwd:
        type: string
      username:
        type: string
    required:
    - username
    type: object
host: localhost:8013
info:
  contact: {}
  termsOfService: http://swagger.io/terms/
  title: cbs manager API
  version: v1
paths:
  /api/v1/approval:
    post:
      consumes:
      - application/json
      description: 创建策略
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ApprovalMut'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 创建审批策略
      tags:
      - Approval
  /api/v1/approval/:id:
    patch:
      consumes:
      - application/json
      description: 更新审批结果，可以是同意或者拒绝
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: approval id
        in: path
        name: id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ApprovalResult'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 更新审批
      tags:
      - Approval
  /api/v1/audit/login:
    get:
      consumes:
      - application/json
      description: 服务器登录审计查询，支持查询用户、IP、时间范围的日志
      parameters:
      - description: duration hours 24 = 1 day, 默认查 1 天的记录
        in: query
        name: duration
        type: integer
      - description: ip
        in: query
        name: ip
        type: string
      - description: user
        in: query
        name: user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SSHLoginRecord'
            type: array
      summary: listLoginAudit
      tags:
      - audit
  /api/v1/audit/scp:
    get:
      consumes:
      - application/json
      description: 服务器文件上传下载审计查询，支持上传upload,下载 download，文件名，服务器IP
      parameters:
      - description: duration hours 24 = 1 day, 默认查 1 天的记录
        in: query
        name: duration
        type: integer
      - description: action
        in: query
        name: action
        type: string
      - description: keyword
        in: query
        name: keyword
        type: string
      - description: user
        in: query
        name: user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ScpRecord'
            type: array
      summary: listScpAudit
      tags:
      - audit
  /api/v1/broadcast:
    post:
      consumes:
      - application/json
      description: broadcast
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CreateBroadcastRequest'
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Broadcast
  /api/v1/key:
    get:
      consumes:
      - application/json
      description: 列出密钥，数据隐藏
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Key'
            type: array
      summary: 列出密钥
      tags:
      - Key
    post:
      consumes:
      - application/json
      description: 添加密钥
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: key
        in: body
        name: key
        required: true
        schema:
          $ref: '#/definitions/model.AddKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 添加密钥
      tags:
      - Key
  /api/v1/key/:uuid:
    delete:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: key uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 删除密钥
      tags:
      - Key
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: 登录接口可以换token使用。
      parameters:
      - description: 用户名
        in: formData
        name: user
        required: true
        type: string
      - description: 密码
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 登录
      tags:
      - ""
  /api/v1/policy:
    get:
      consumes:
      - application/json
      description: 获取策略列表，只能查某人或者某个组或者某个策略，不可组合查询，查用户会带出用户所在组的策略
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: policy id
        in: query
        name: id
        type: string
      - description: user
        in: query
        name: user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Policy'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 获取策略列表
      tags:
      - Policy
  /api/v1/policy/:id:
    delete:
      consumes:
      - application/json
      description: 删除策略
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: policy id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 删除策略
      tags:
      - Policy
    put:
      consumes:
      - application/json
      description: 更新策略
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: policy id
        in: path
        name: id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PolicyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 更新策略
      tags:
      - Policy
  /api/v1/policy/permission:
    get:
      consumes:
      - application/json
      description: 权限校验，提供用户名可以查询该用户拥有的权限
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: user
        in: query
        name: user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Policy'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 权限校验
      tags:
      - Policy
  /api/v1/profile:
    get:
      consumes:
      - application/json
      description: List profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Profile'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List profile
      tags:
      - profile
    post:
      consumes:
      - application/json
      description: Create profile
      parameters:
      - description: profile
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/model.CreateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create profile
      tags:
      - profile
  /api/v1/profile/:uuid:
    delete:
      consumes:
      - application/json
      description: Delete profile
      parameters:
      - description: profile uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete profile
      tags:
      - profile
    put:
      consumes:
      - application/json
      description: Update profile
      parameters:
      - description: profile
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/model.CreateProfileRequest'
      - description: profile uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update profile
      tags:
      - profile
  /api/v1/proxy:
    get:
      consumes:
      - application/json
      description: list proxy servers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Proxy'
            type: array
      summary: ListProxy
      tags:
      - proxy
    post:
      description: add proxy server
      parameters:
      - description: proxy server info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CreateProxyRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Proxy'
      summary: AddProxy
      tags:
      - proxy
  /api/v1/proxy/:uuid:
    delete:
      consumes:
      - application/json
      parameters:
      - description: proxy server uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: DeleteProxy
      tags:
      - proxy
    put:
      parameters:
      - description: proxy server info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CreateProxyRequest'
      - description: proxy server uuid
        in: path
        name: uuid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Proxy'
      summary: UpdateProxy
      tags:
      - proxy
  /api/v1/shell/record:
    get:
      consumes:
      - application/json
      description: list shell record
      parameters:
      - description: taskid
        in: query
        name: taskid
        type: string
      - description: serverip
        in: query
        name: serverip
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ShellTaskRecord'
            type: array
      summary: ListShellRecord
      tags:
      - shell
  /api/v1/shell/task:
    get:
      consumes:
      - application/json
      description: list shell tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ShellTask'
            type: array
      summary: ListShellTask
      tags:
      - shell
    post:
      consumes:
      - application/json
      description: add shell task
      parameters:
      - description: shell
        in: body
        name: shell
        required: true
        schema:
          $ref: '#/definitions/model.CreateShellTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: AddShellTask
      tags:
      - shell
  /api/v1/shell/task/:uuid:
    delete:
      consumes:
      - application/json
      description: delete shell task
      parameters:
      - description: shell task uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: DeleteShellTask
      tags:
      - shell
    put:
      consumes:
      - application/json
      description: update shell task
      parameters:
      - description: shell
        in: body
        name: shell
        required: true
        schema:
          $ref: '#/definitions/model.CreateShellTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: UpdateShellTask
      tags:
      - shell
  /api/v1/user:
    get:
      consumes:
      - application/json
      description: 获取用户列表
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: name 支持用户名或者email查询
        in: query
        name: name
        type: string
      - description: group
        in: query
        name: group
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: 获取用户列表
      tags:
      - User
    post:
      consumes:
      - application/json
      description: 添加用户
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 添加用户
      tags:
      - User
  /api/v1/user/:id:
    patch:
      consumes:
      - application/json
      description: 支持数组会与现有组进行合并
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserPatchMut'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 追加用户组
      tags:
      - User
    put:
      consumes:
      - application/json
      description: 更新用户
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 更新用户
      tags:
      - User
swagger: "2.0"
