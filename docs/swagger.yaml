definitions:
  api.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  db.Action:
    enum:
    - connect
    - deny_connect
    - download
    - deny_download
    - upload
    - deny_upload
    type: string
    x-enum-varnames:
    - Connect
    - DenyConnect
    - Download
    - DenyDownload
    - Upload
    - DenyUpload
  db.AddKeyRequest:
    properties:
      key_id:
        description: 云上的key id，比如 skey-123456
        type: string
      key_name:
        description: 云上下载下来的名字，比如 jms-key.pem
        type: string
      pem_md5:
        description: md5
        type: string
      profile:
        description: 云账号的 profile，比如 aws, aliyun
        type: string
    required:
    - key_id
    - pem_md5
    type: object
  db.ApprovalMut:
    properties:
      actions:
        description: 申请动作，默认只有connect
        items:
          $ref: '#/definitions/db.Action'
        type: array
      applicant:
        description: 申请人AD名,或者email
        type: string
      groups:
        items: {}
        type: array
      name:
        type: string
      period:
        allOf:
        - $ref: '#/definitions/db.Period'
        description: 审批周期，默认一周
      server_filter:
        $ref: '#/definitions/utils.ServerFilter'
      users:
        items: {}
        type: array
    required:
    - applicant
    - server_filter
    - users
    type: object
  db.ApprovalResult:
    properties:
      applicant:
        type: string
      is_pass:
        type: boolean
    type: object
  db.Period:
    enum:
    - 1d
    - 1w
    - 1m
    - 1y
    - ever
    type: string
    x-enum-varnames:
    - OneDay
    - OneWeek
    - OneMonth
    - OneYear
    - Forever
  db.PolicyMut:
    properties:
      actions:
        items: {}
        type: array
      expires_at:
        type: string
      groups:
        items: {}
        type: array
      is_enabled:
        type: boolean
      name:
        type: string
      server_filter:
        $ref: '#/definitions/utils.ServerFilter'
      users:
        items: {}
        type: array
    type: object
  db.User:
    properties:
      created_at:
        type: string
      dingtalk_dept_id:
        type: string
      dingtalk_id:
        type: string
      email:
        type: string
      groups:
        description: 组不在 jms维护这里只需要和机器 tag:Team 匹配即可。
        items: {}
        type: array
      id:
        type: string
      is_deleted:
        type: boolean
      is_ldap:
        type: boolean
      passwd:
        description: 密码计算为md5保存
        items:
          type: integer
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
  db.UserMut:
    properties:
      dingtalk_dept_id:
        type: string
      dingtalk_id:
        type: string
      email:
        type: string
      groups:
        items: {}
        type: array
      passwd:
        type: string
      username:
        type: string
    required:
    - username
    type: object
  db.UserPatchMut:
    properties:
      groups:
        items: {}
        type: array
    type: object
  utils.ServerFilter:
    properties:
      env_type:
        type: string
      ip_addr:
        type: string
      name:
        type: string
      team:
        type: string
    type: object
host: localhost:8013
info:
  contact: {}
  termsOfService: http://swagger.io/terms/
  title: cbs manager API
  version: v1
paths:
  /api/v1/approval:
    post:
      consumes:
      - application/json
      description: 创建策略
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.ApprovalMut'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: 创建审批策略
      tags:
      - Approval
  /api/v1/approval/:id:
    patch:
      consumes:
      - application/json
      description: 更新审批结果，可以是同意或者拒绝
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: approval id
        in: path
        name: id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.ApprovalResult'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: 更新审批
      tags:
      - Approval
  /api/v1/key:
    get:
      consumes:
      - application/json
      description: 列出密钥，数据隐藏
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: 列出密钥
      tags:
      - Key
    post:
      consumes:
      - application/json
      description: 添加密钥
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: key
        in: body
        name: key
        required: true
        schema:
          $ref: '#/definitions/db.AddKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: 添加密钥
      tags:
      - Key
  /api/v1/key/:uuid:
    delete:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: key uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: 删除密钥
      tags:
      - Key
  /api/v1/policy:
    get:
      consumes:
      - application/json
      description: 获取策略列表，只能查某人或者某个组或者某个策略，不可组合查询，查用户会带出用户所在组的策略
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: policy id
        in: query
        name: id
        type: string
      - description: user
        in: query
        name: user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: 获取策略列表
      tags:
      - Policy
  /api/v1/policy/:id:
    delete:
      consumes:
      - application/json
      description: 删除策略
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: policy id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: 删除策略
      tags:
      - Policy
    put:
      consumes:
      - application/json
      description: 更新策略
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: policy id
        in: path
        name: id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.PolicyMut'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: 更新策略
      tags:
      - Policy
  /api/v1/user:
    get:
      consumes:
      - application/json
      description: 获取用户列表
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: name 支持用户名或者email查询
        in: query
        name: name
        type: string
      - description: group
        in: query
        name: group
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: 获取用户列表
      tags:
      - User
  /api/v1/user/:id:
    patch:
      consumes:
      - application/json
      description: 支持数组会与现有组进行合并
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.UserPatchMut'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: 追加用户组
      tags:
      - User
    put:
      consumes:
      - application/json
      description: 更新用户
      parameters:
      - description: token
        in: header
        name: Authorization
        type: string
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.UserMut'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: 更新用户
      tags:
      - User
swagger: "2.0"
