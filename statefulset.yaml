apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jms-statefulset
  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jms
  serviceName: jms
  template:
    metadata:
      name: jms
      labels:
        app: jms
    spec:
      containers:
        - name: jms-api
          image: zhoushoujian/jms:latest
          imagePullPolicy: Always
          env:
            - name: API
              value: "true"
          volumeMounts:
            - mountPath: /opt/jms/.jms.yml
              subPath: .jms.yml
              name: jms-config-volume
              readOnly: true
            - mountPath: /opt/jms/
              name: ssh-volume
          resources:
            limits:
              cpu: 1
              memory: 1Gi
            requests:
              cpu: 0.1
              memory: 256Mi
          ports:
            - name: api
              containerPort: 8013
              protocol: TCP


        - name: jms
          image: zhoushoujian/jms:latest
          imagePullPolicy: Always
          env:
            - name : WITH_SSH_CHECK
              value: "true"
            - name: SSH_DIR
              value: /opt/jms/.ssh/
          volumeMounts:
            - mountPath: /opt/jms/
              name: ssh-volume
            - mountPath: /opt/logs/
              name: logs-volume
              readOnly: false
            - mountPath: /opt/jms/.jms.yml
              subPath: .jms.yml
              name: jms-config-volume
              readOnly: true
          resources:
            limits:
              cpu: 1
              memory: 1Gi
            requests:
              cpu: 0.1
              memory: 256Mi
          ports:
            - name: ssh
              containerPort: 22222
              protocol: TCP
      volumes:
        - name: jms-config-volume # 安全原因 configmap.yaml是没有上传的，需要自己去集群修改。
          configMap:
            name: jms-config
        - name: ssh-volume
          persistentVolumeClaim:
            claimName: s-ops-jms-ssh-claim
        - name: logs-volume
          hostPath:
            path: /mnt/logs/jms-tools/
      
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jms-ssh-claim
  
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 80Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jms-svc
  
spec:
  ports:
    - port: 22222
      targetPort: 22222
      protocol: TCP
      name: ssh
    - port: 8013
      targetPort: 8013
      protocol: TCP
      name: api
  type: NodePort

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jms-config
  
data:
  .jms.yml: |
    appSet:
      homeDir: "/opt/jms"
      audit:
        enable: true
        cron: "0 0 3 * * *"
        dir: "/opt/jms/audit"
        keepDays: 60
        
    profiles:
      - name: "aws"
        ak: "xx"
        sk: "xxx"
        regions:
          - "cn-northwest-1"
        cloud: aws

    keys: #（启用数据库可以不配置该选项）
      skey-xxx: "xxx.pem" # 用于ssh连接的私钥，需要放在/opt/jms/.ssh/目录下

    proxies:
      - name: "name_a"
        host: "1.1.1.1"
        port: 22
        ipPrefix: "10.159." # IP前缀匹配都用这个代理
        sshUsers:
          sshUsername: root
          identityFile: xxx.pem
          password:
      
    withLdap:
      enable: false
      host: "xxx"
      port: 389
      baseDN: "dc=corp,dc=xxx,dc=com"
      bindUser: "xx"
      bindPassword: "xxx"
      userSearchFilter: "(sAMAccountName=%s)"
      attributes:
        - dn
        - sAMAccountName
        - email

    withSSHCheck:
      enable: false # 是否启用SSH检查并通过钉钉告警到群
      alert:
        robotToken: "xxx"
      ips:
        - "1.1.1.1"
        
    withPolicy:
      enable: false # 是否启用数据库来启用授权策略
      pg:
        host: "xxx"
        port: xx
        username: "xx"
        password: "xxx"
        database: "jms"
    
    withDingTalk:
      enable: flase # 自动接入钉钉审批实现联动
      processCode: "xxx"
      appKey: "xx"
      appSecret: "xxx"
